{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAXGQ,SAASC,cAAc,SAe/BC,iBAAiB,SAEzB,SAAwBC,GACtBA,EAAMC,iBAEN,MAAQZ,MAAAa,EAAKC,OAAEA,EAAMC,KAAEA,GAASJ,EAAMK,cAAcC,SAEpD,IAAK,IAAIC,EAAI,EAAGA,IAAMJ,EAAOK,MAAOD,IAAK,CACvC,IAAIE,GAAgBP,EAAMM,QAASJ,EAAKI,MAAQD,EAChDpB,EAAcoB,EAAGE,GACdC,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,SACrCyB,OAEJ,EAAO1B,WAAUC,WAChBsB,EAAA1B,GAAQ2B,OAACG,QAAO,sBAAS3B,QAA8BC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst getForm = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ngetForm.addEventListener('click', getPromiseList);\n\nfunction getPromiseList(event) {\n  event.preventDefault();\n\n  const { delay, amount, step } = event.currentTarget.elements;\n\n  for (let i = 0; i <= +amount.value; i++) {\n    let promiseDelay = +delay.value + +step.value * i;\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","amount","step","currentTarget","elements","i","value","promiseDelay","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.f6458c64.js.map"}