{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEgBC,SAASC,cAAc,SAe/BC,iBAAiB,UAEzB,SAAwBC,G,kBAMpB,IAAIC,EAAiBC,EAAMC,OArB/B,SAAuBC,EAAUF,GAC/B,OAAO,IAAIG,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUF,UAEpBK,EAAO,CAAEH,WAAUF,S,GAEpBA,E,KAaHU,CAAcC,EAAGX,GACdY,MAAK,SAAAC,G,IAAGX,EAAQW,EAARX,SAAeW,EAALb,M,OACjBc,EAAArB,GAASsB,OAAOC,QACd,uBAAwCC,OAAff,EAAS,QAAqBe,OAAflB,EAAe,M,IAG1DmB,OAAM,SAAAL,G,IAAGX,EAAQW,EAARX,SAAeW,EAALb,M,OAClBc,EAAArB,GAASsB,OAAOI,QACd,sBAAqCF,OAAff,EAAS,QAAqBe,OAAflB,EAAe,M,IAG1DA,EAAiBqB,OAAOpB,EAAMC,OAASmB,OAAOC,EAAKpB,OAASU,C,EAjB9Db,EAAMwB,iBAIN,IAFA,IAAgCC,EAAAzB,EAAM0B,cAAcC,SAA5CzB,EAAwBuB,EAAxBvB,MAAO0B,EAAiBH,EAAjBG,OAAQL,EAASE,EAATF,KAEdM,EAAI,EAAGA,GAAKP,OAAOM,EAAOzB,OAAQ0B,IAAGC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst getForm = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ngetForm.addEventListener('submit', getPromiseList);\n\nfunction getPromiseList(event) {\n  event.preventDefault();\n\n  const { delay, amount, step } = event.currentTarget.elements;\n\n  for (let i = 1; i <= Number(amount.value); i++) {\n    let getTimePromise = delay.value;\n    createPromise(i, delay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${getTimePromise}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${getTimePromise}ms`\n        )\n      );\n    getTimePromise = Number(delay.value) + Number(step.value) * i;\n  }\n}\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","event","getTimePromise","delay","value","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","Number","step","preventDefault","_elements","currentTarget","elements","amount","i1","_loop"],"version":3,"file":"03-promises.7bbc8bce.js.map"}