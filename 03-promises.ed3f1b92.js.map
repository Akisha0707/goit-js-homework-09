{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAIA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,eAAUC,IAEpBG,EAAO,C,SAAEJ,E,eAAUC,GAAiB,GAErCA,EAAe,G,CAXNQ,SAASC,cAAc,SAe/BC,iBAAiB,UAEzB,SAAwBC,GACtBA,EAAMC,iBAEN,MAAMC,MAAEA,EAAKC,OAAEA,EAAMC,KAAEA,GAASJ,EAAMK,cAAcC,SACpD,IAAIC,EAAiBL,EAAMM,MAC3B,IAAK,IAAIC,EAAI,EAAGA,GAAKC,OAAOP,EAAOK,OAAQC,IACzCE,QAAQC,IAAIL,GACZpB,EAAcsB,EAAGF,GACdM,MAAK,EAACzB,SAAEA,EAAQC,eAAEA,KACjByB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqB5B,QAAiBC,SACrC4B,OAEJ,EAAO7B,WAAUC,oBAChByB,EAAA7B,GAAQ8B,OAACG,QAAO,sBACb9B,QAA8BC,SAGrCkB,EAAiBG,OAAOR,EAAMM,OAASE,OAAON,EAAKI,OAASC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst getForm = document.querySelector('.form');\n\nfunction createPromise(position, getTimePromise) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, getTimePromise });\n      } else {\n        reject({ position, getTimePromise });\n      }\n    }, getTimePromise);\n  });\n}\n\ngetForm.addEventListener('submit', getPromiseList);\n\nfunction getPromiseList(event) {\n  event.preventDefault();\n\n  const { delay, amount, step } = event.currentTarget.elements;\n  let getTimePromise = delay.value;\n  for (let i = 1; i <= Number(amount.value); i++) {\n    console.log(getTimePromise);\n    createPromise(i, getTimePromise)\n      .then(({ position, getTimePromise }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${getTimePromise}ms`\n        )\n      )\n      .catch(({ position, getTimePromise }) =>\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${getTimePromise}ms`\n        )\n      );\n    getTimePromise = Number(delay.value) + Number(step.value) * i;\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","getTimePromise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay","amount","step","currentTarget","elements","getTimePromise1","value","i","Number","console","log","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.ed3f1b92.js.map"}